# Simplified test configuration with just a few MCP servers
# Health checks use MCP ping requests as per specification:
# https://modelcontextprotocol.io/specification/2025-06-18/basic/utilities/ping

servers:
  # Time server - simple and reliable for testing
  time:
    command: "/nix/store/blkyfy6pa9xkfzvqkpkhvhgk59wzbmrs-mcp-server-time-2025.7.1/bin/mcp-server-time"
    args: []
    env: {}
    transport:
      type: stdio
    restartOnFailure: true

  # Memory server - good for testing persistence
  memory:
    command: "/nix/store/syriwihrly43z3cq3665ri50cmmy9fdd-mcp-server-memory-2025.7.1/bin/mcp-server-memory"
    args: []
    env:
      MEMORY_FILE_PATH: "/tmp/mcp-proxy-test-memory.db"
    transport:
      type: stdio
    restartOnFailure: true

  # Sequential thinking - useful for testing
  sequential-thinking:
    command: "/nix/store/33k4c3cgm9jlvh4097w05x33dp5kpc14-mcp-server-sequential-thinking-2025.7.1/bin/mcp-server-sequential-thinking"
    args: []
    env: {}
    transport:
      type: stdio
    restartOnFailure: true

proxy:
  host: "127.0.0.1"
  port: 3000
  connectionPoolSize: 10
  requestTimeoutMs: 30000
  maxConcurrentRequests: 100

webUi:
  enabled: true
  host: "127.0.0.1"
  port: 3001

healthCheck:
  enabled: false  # Disable for now - time server doesn't support ping
  intervalSeconds: 60  # Run every minute when enabled
  timeoutSeconds: 5